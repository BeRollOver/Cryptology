@model Cryptology.Models.ElGamalAlgorithmModels

@{
    ViewBag.Title = "ElGamal Algorithm";
}

<h2>ElGamal Algorithm</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Данные пользователя A</h4>
        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.Hidden("K", 65, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.Hidden("X", 1, new { htmlAttributes = new { @class = "form-control" } })

                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

        <div class="form-group">
            @Html.LabelFor(model => model.P, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.P, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.G, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.G, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.G, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
